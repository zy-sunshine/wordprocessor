#!/bin/bash
#

# source function library
if [ -f /etc/rc.d/init.d/functions ]; then
    . /etc/rc.d/init.d/functions
fi

prog="wordpd"
PYTHON=/usr/bin/python
if [ ! -f /etc/wordp.ini ]; then
    echo 'Please link your config file to /etc/wordp.ini'
    exit -1
fi
proxy_dir=$(sed -n 's/^wordp_base=\([^ ]*.*\)/\1/p' < /etc/wordp.ini)
if [ "x$proxy_dir" == "x" -o ! -d "$proxy_dir" ]; then
    echo 'Get base directory(from /etc/wordp.ini) is "'$proxy_dir'"'
    if [ ! -d $proxy_dir ]; then
        echo "Base directory is not exists"
    fi
    exit -1
fi
proxy=$proxy_dir/wordp.py
proxy_exit=$proxy_dir/wordp-exit.py
log=$proxy_dir/wordp.log
lock=/var/lock/$prog

runlevel=$(set -- $(runlevel); eval "echo \$$#" )

start()
{
   echo $"Starting $prog"
   if [ -f $lock ]; then
      echo "$prog is running, please stop it and start."
      return
   fi
   [ -f "$log" ] && mv -f "$log" "$log.old"
   $PYTHON $proxy 1>$log  2>&1 &
   touch $lock
   sleep 1
   for file in /tmp/wordp.client.ipc; do
      chmod g+w $file
      chmod o+w $file
   done
}

stop()
{
   echo $"Stopping $prog"
   if [ ! -f $lock ]; then
      echo "$prog is not running, please run it first."
      return
   fi
   $PYTHON $proxy_exit 1>/dev/null 2>&1 &
   x=0
   while [ "$x" -lt 10 -a -S /tmp/wordp.server.exit.ipc ] ;
   do
      x=$((x+1))
      echo -n "."
      sleep 1
   done
   if [ -S /tmp/wordp.client.ipc ];then
      kill $(ps aux | grep "$proxy" | awk '{print $2}')
   fi
   rm -f $lock
}

restart() {
   stop
   start
}


case "$1" in
   start)
       start
       ;;
   stop)
       stop
       ;;
   restart)
       restart
       ;;
   *)
echo $"Usage: $0 {start|stop|restart}"
exit 0
esac
